#include <Wire.h>  // i2c
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
#define OLED_RESET     0 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#include "DHT.h"
#define DHTPIN D4
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

static const unsigned PROGMEM char Humidity [] = {
0x00, 0x60, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x01, 0x08, 0x00, 0x00,
0x03, 0x04, 0x00, 0x00, 0x02, 0x06, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x0C, 0x01, 0x00, 0x00,
0x08, 0x01, 0x00, 0x00, 0x18, 0x00, 0x80, 0x00, 0x10, 0x00, 0x80, 0xC0, 0x30, 0x00, 0x41, 0xA0,
0x28, 0x00, 0x43, 0x30, 0x28, 0x00, 0x42, 0x10, 0x28, 0x00, 0x46, 0x08, 0x28, 0x00, 0x44, 0x08,
0x2C, 0x00, 0x4C, 0x04, 0x14, 0x00, 0xC8, 0x14, 0x12, 0x00, 0x88, 0x14, 0x09, 0x81, 0x8C, 0x34,
0x04, 0x03, 0x04, 0xE8, 0x03, 0xFC, 0x46, 0x08, 0x00, 0x00, 0xE3, 0xF0, 0x00, 0x00, 0xB0, 0x00,
0x00, 0x01, 0x10, 0x00, 0x00, 0x03, 0x18, 0x00, 0x00, 0x02, 0x08, 0x00, 0x00, 0x02, 0x88, 0x00,
0x00, 0x02, 0x88, 0x00, 0x00, 0x02, 0xC8, 0x00, 0x00, 0x01, 0x18, 0x00, 0x00, 0x00, 0xF0, 0x00
};

static const unsigned PROGMEM char Temperature [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x04, 0x20, 0x00, 0x00, 0x34, 0x20, 0x00,
0x00, 0x04, 0x20, 0x00, 0x00, 0x34, 0x20, 0x00, 0x00, 0x04, 0x20, 0x00, 0x00, 0x15, 0xA0, 0x00,
0x00, 0x15, 0xA0, 0x00, 0x00, 0x05, 0xA0, 0x00, 0x00, 0x35, 0xA0, 0x00, 0x00, 0x05, 0xA0, 0x00,
0x00, 0x05, 0xA0, 0x00, 0x00, 0x0D, 0xB0, 0x00, 0x00, 0x11, 0x98, 0x00, 0x00, 0x33, 0xC8, 0x00,
0x00, 0x27, 0xEC, 0x00, 0x00, 0x27, 0xE4, 0x00, 0x00, 0x27, 0xEC, 0x00, 0x00, 0x33, 0xE8, 0x00,
0x00, 0x19, 0x98, 0x00, 0x00, 0x0C, 0x70, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


void setup() {
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3C for 128x32
    Serial.println(F("SSD1306 allocation failed"));
    
    for(;;); }
  
  Serial.begin(9600);
  dht.begin();

}

void loop() {
  float Temp = dht.readTemperature();
  float Hum  = dht.readHumidity();
  delay(500);
  Serial.print("Temp = ");
  Serial.print(Temp);
  Serial.print("[C]");
  Serial.print("Hum = ");
  Serial.print(Hum);
  Serial.println("%");

  display.clearDisplay();
  display.drawBitmap(0,0,Temperature,32,32,1);
  display.setTextColor(WHITE);
  display.setTextSize(1.3);
  display.setCursor(40,12);
  display.print("Temp = ");
  display.print(Temp,1);
  display.print("[C]");

  display.drawBitmap(0,32,Humidity,32,32,1);
  display.setCursor(40,44);
  display.print("Hum =");
  display.print(Hum,1);
  display.print("%");
  
  display.display();

}
